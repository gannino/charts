apiVersion: v1
kind: Service
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: dex
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
{{- if .Values.Dex.NodePort }}
  type: NodePort
{{- end }}
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
{{- if .Values.Dex.NodePort }}
    nodePort: {{.Values.Dex.NodePort}}
{{- end }}
  selector:
    app: {{ template "name" . }}
    component: dex
    release: {{ .Release.Name }}
{{- if .Values.Dex.Tls }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "dex.fullname" . }}.tls
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "dex"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  tls.ca: {{.Values.Dex.Tls.Ca}}
  tls.crt: {{.Values.Dex.Tls.Cert}}
  tls.key: {{.Values.Dex.Tls.Key}}
{{- end }}
{{- if .Values.Dex.Connectors.GitHub }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "dex.fullname" . }}.github
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "dex"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
type: Opaque
data:
{{- range $index, $element := .Values.Dex.Connectors.GitHub }}
  {{ $index }}-client-id: {{$element.ClientId}}
  {{ $index }}-client-secret: {{$element.ClientSecret}}
{{- end }}
{{- end }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "dex"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  config.yaml: |
    issuer: {{.Values.Dex.Issuer}}

    storage:
      type: kubernetes
      config:
        inCluster: true

    logger:
      level: "{{.Values.Dex.LogLevel}}"
      format: "text" # can also be "json"

    web:
      http: 0.0.0.0:80

    expiry:
       signingKeys: "6h"
       idTokens: "1h"

{{- if .Values.Dex.Connectors }}
    connectors:
{{- range $index, $element := .Values.Dex.Connectors.GitHub }}
    - type: github
      id: gh{{ $index }}
      name: {{$element.Name}}
      config:
        clientID: $GITHUB{{ $index }}_CLIENT_ID
        clientSecret: $GITHUB{{ $index }}_CLIENT_SECRET
        redirectURI: {{$.Values.Dex.Issuer}}/callback
{{- if $element.Org }}
        org: {{$element.Org}}
{{- end }}
{{- end }}
{{- end }}

    oauth2:
      skipApprovalScreen: true

    staticClients:
    - id: kubesignin
      redirectURIs:
        - "{{.Values.Kubesignin.RedirectUri}}"
      name: "kubesignin"
      secret: {{.Values.Kubesignin.ClientSecret}}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "dex"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        component: dex
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "dex.fullname" . }}
      containers:
      - name: {{ template "dex.fullname" . }}
        image: {{.Values.Dex.Image}}:{{.Values.Dex.ImageTag}}
        imagePullPolicy: Always
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        ports:
        - name: http
          containerPort: 80

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
{{- if .Values.Dex.Tls }}
        - name: tls
          mountPath: /etc/dex/tls
{{- end }}

        env:
{{- range $index, $element := .Values.Dex.Connectors.GitHub}}
        - name: GITHUB{{ $index }}_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" $ }}.github
              key: {{ $index }}-client-id
        - name: GITHUB{{ $index }}_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" $ }}.github
              key: {{ $index }}-client-secret
{{- end }}
        resources:
          limits:
            cpu: {{ .Values.Dex.Cpu }}
            memory: {{ .Values.Dex.Memory }}
          requests:
            cpu: {{ .Values.Dex.Cpu }}
            memory: {{ .Values.Dex.Memory }}
      volumes:
      - name: config
        configMap:
          name: {{ template "dex.fullname" . }}
          items:
          - key: config.yaml
            path: config.yaml
{{- if .Values.Dex.Tls }}
      - name: tls
        secret:
          secretName: {{ template "dex.fullname" . }}.tls
{{- end }}
