apiVersion: v1
kind: Service
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: dex
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
{{- if .Values.Dex.NodePort }}
  type: NodePort
{{- end }}
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
{{- if .Values.Dex.NodePort }}
    nodePort: {{.Values.Dex.NodePort}}
{{- end }}
  selector:
    app: {{ template "name" . }}
    component: dex
    release: {{ .Release.Name }}
{{- if .Values.Dex.Tls }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "dex"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/dex-config.yaml") . | sha256sum }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        component: dex
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "dex.fullname" . }}
      containers:
      - name: {{ template "dex.fullname" . }}
        image: {{.Values.Dex.Image}}:{{.Values.Dex.ImageTag}}
        imagePullPolicy: Always
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        ports:
        - name: http
          containerPort: 80

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
{{- if .Values.Dex.Tls }}
        - name: tls
          mountPath: /etc/dex/tls
{{- end }}

        env:
{{- if .Values.Dex.Connector.GitHub }}
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" . }}.github
              key: client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" . }}.github
              key: client-secret
{{- end}}
{{- if .Values.Dex.Connector.Oidc }}
        - name: OIDC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" . }}.oidc
              key: client-id
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" . }}.oidc
              key: client-secret
{{- end}}
        resources:
          limits:
            cpu: {{ .Values.Dex.Cpu }}
            memory: {{ .Values.Dex.Memory }}
          requests:
            cpu: {{ .Values.Dex.Cpu }}
            memory: {{ .Values.Dex.Memory }}
      volumes:
      - name: config
        configMap:
          name: {{ template "dex.fullname" . }}
          items:
          - key: config.yaml
            path: config.yaml
{{- if .Values.Dex.Tls }}
      - name: tls
        secret:
          secretName: {{ template "dex.fullname" . }}.tls
{{- end }}
